@model WebApplication.Models.LocationEditee

@{
    ViewBag.Title = "Ajouter/Editer une location";

    <link rel="stylesheet" href="~/Content/style.css" />
}


<div class="row">
    <div class="col-lg-3">
        <a href="@Url.Action("ListeLocation", "Location")" class="btn btn-labeled btn-default">
            <span class="btn-label"><i class="glyphicon glyphicon-chevron-left"></i></span>Retour à la liste des locations
        </a>
    </div>
</div>

<br />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LocationID)

        <div class="form-group">
            @Html.LabelFor(model => model.ArticleID, "Article *", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ArticleID, ViewBag.Article as SelectList, "", new { ArticleID = "ArtID", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ArticleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerID, "Client *", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CustomerID, ViewBag.Customer as SelectList, "", new { CustomerID = "CustID", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CustomerID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.UserID, "User *", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserID, ViewBag.User as SelectList, "", new { UserID = "UsID", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateLocation, "Date de locaction *", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateLocation, new { htmlAttributes = new { @class = "form-control", @Value = @DateTime.Now.ToString("dd-MM-yyyy hh:mm:ss tt"), @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.DateLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateBack, "Date de retour *", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateBack, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateBack, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, "Quantité *", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EtatLocation, "Status de location", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EtatLocation, new SelectListItem[]{
                                                                new SelectListItem{Value = "En cours", Text="En cours"},
                                                                new SelectListItem{Value = "Rendu", Text="Rendu"},
                               }, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.EtatLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Valider" class="btn btn-default btn-success" />
            </div>
        </div>
    </div>
}